/**
 * generated by Xtext 2.25.0
 */
package edu.upb.lp.isc.losMelos.impl;

import edu.upb.lp.isc.losMelos.Basica;
import edu.upb.lp.isc.losMelos.CompBool;
import edu.upb.lp.isc.losMelos.Definiciones;
import edu.upb.lp.isc.losMelos.Ejecuciones;
import edu.upb.lp.isc.losMelos.ElementList;
import edu.upb.lp.isc.losMelos.ExprArithmetic;
import edu.upb.lp.isc.losMelos.ExprBool;
import edu.upb.lp.isc.losMelos.ExprCar;
import edu.upb.lp.isc.losMelos.ExprCdr;
import edu.upb.lp.isc.losMelos.ExprCons;
import edu.upb.lp.isc.losMelos.ExprElse;
import edu.upb.lp.isc.losMelos.ExprIf;
import edu.upb.lp.isc.losMelos.ExprInt;
import edu.upb.lp.isc.losMelos.ExprIsEmpty;
import edu.upb.lp.isc.losMelos.ExprLength;
import edu.upb.lp.isc.losMelos.ExprList;
import edu.upb.lp.isc.losMelos.ExprList2;
import edu.upb.lp.isc.losMelos.ExprNumber;
import edu.upb.lp.isc.losMelos.ExprParam;
import edu.upb.lp.isc.losMelos.ExprPrint;
import edu.upb.lp.isc.losMelos.ExprString;
import edu.upb.lp.isc.losMelos.ExprThen;
import edu.upb.lp.isc.losMelos.Expresion;
import edu.upb.lp.isc.losMelos.ExpresionVar;
import edu.upb.lp.isc.losMelos.FuncList;
import edu.upb.lp.isc.losMelos.Funciones;
import edu.upb.lp.isc.losMelos.LlamadaFuncion;
import edu.upb.lp.isc.losMelos.LlamadaParametro;
import edu.upb.lp.isc.losMelos.LosMelosFactory;
import edu.upb.lp.isc.losMelos.LosMelosPackage;
import edu.upb.lp.isc.losMelos.OpBool;
import edu.upb.lp.isc.losMelos.Program;
import edu.upb.lp.isc.losMelos.ValBool;
import edu.upb.lp.isc.losMelos.Variables;

import org.eclipse.emf.ecore.EAttribute;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EPackage;
import org.eclipse.emf.ecore.EReference;

import org.eclipse.emf.ecore.impl.EPackageImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model <b>Package</b>.
 * <!-- end-user-doc -->
 * @generated
 */
public class LosMelosPackageImpl extends EPackageImpl implements LosMelosPackage
{
  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass programEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass definicionesEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass funcionesEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass variablesEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass expresionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass llamadaParametroEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass expresionVarEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass basicaEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass exprStringEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass exprNumberEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass exprIntEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass exprArithmeticEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass exprParamEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass llamadaFuncionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass exprBoolEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass valBoolEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass compBoolEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass opBoolEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass exprIfEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass exprThenEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass exprElseEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass exprListEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass exprList2EClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass elementListEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass funcListEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass exprCarEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass exprCdrEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass exprConsEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass exprIsEmptyEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass exprLengthEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass exprPrintEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass ejecucionesEClass = null;

  /**
   * Creates an instance of the model <b>Package</b>, registered with
   * {@link org.eclipse.emf.ecore.EPackage.Registry EPackage.Registry} by the package
   * package URI value.
   * <p>Note: the correct way to create the package is via the static
   * factory method {@link #init init()}, which also performs
   * initialization of the package, or returns the registered package,
   * if one already exists.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.eclipse.emf.ecore.EPackage.Registry
   * @see edu.upb.lp.isc.losMelos.LosMelosPackage#eNS_URI
   * @see #init()
   * @generated
   */
  private LosMelosPackageImpl()
  {
    super(eNS_URI, LosMelosFactory.eINSTANCE);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private static boolean isInited = false;

  /**
   * Creates, registers, and initializes the <b>Package</b> for this model, and for any others upon which it depends.
   *
   * <p>This method is used to initialize {@link LosMelosPackage#eINSTANCE} when that field is accessed.
   * Clients should not invoke it directly. Instead, they should simply access that field to obtain the package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #eNS_URI
   * @see #createPackageContents()
   * @see #initializePackageContents()
   * @generated
   */
  public static LosMelosPackage init()
  {
    if (isInited) return (LosMelosPackage)EPackage.Registry.INSTANCE.getEPackage(LosMelosPackage.eNS_URI);

    // Obtain or create and register package
    Object registeredLosMelosPackage = EPackage.Registry.INSTANCE.get(eNS_URI);
    LosMelosPackageImpl theLosMelosPackage = registeredLosMelosPackage instanceof LosMelosPackageImpl ? (LosMelosPackageImpl)registeredLosMelosPackage : new LosMelosPackageImpl();

    isInited = true;

    // Create package meta-data objects
    theLosMelosPackage.createPackageContents();

    // Initialize created meta-data
    theLosMelosPackage.initializePackageContents();

    // Mark meta-data to indicate it can't be changed
    theLosMelosPackage.freeze();

    // Update the registry and return the package
    EPackage.Registry.INSTANCE.put(LosMelosPackage.eNS_URI, theLosMelosPackage);
    return theLosMelosPackage;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getProgram()
  {
    return programEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getProgram_Name()
  {
    return (EAttribute)programEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getProgram_SeccionDefiniciones()
  {
    return (EReference)programEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getProgram_SeccionEjecuciones()
  {
    return (EReference)programEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getDefiniciones()
  {
    return definicionesEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getDefiniciones_Name()
  {
    return (EAttribute)definicionesEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getFunciones()
  {
    return funcionesEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getFunciones_Param()
  {
    return (EAttribute)funcionesEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getFunciones_Body()
  {
    return (EReference)funcionesEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getVariables()
  {
    return variablesEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getVariables_Body()
  {
    return (EReference)variablesEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getExpresion()
  {
    return expresionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getLlamadaParametro()
  {
    return llamadaParametroEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getLlamadaParametro_Param()
  {
    return (EReference)llamadaParametroEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getExpresionVar()
  {
    return expresionVarEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getBasica()
  {
    return basicaEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getExprString()
  {
    return exprStringEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getExprString_Val()
  {
    return (EAttribute)exprStringEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getExprNumber()
  {
    return exprNumberEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getExprInt()
  {
    return exprIntEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getExprInt_Var()
  {
    return (EAttribute)exprIntEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getExprArithmetic()
  {
    return exprArithmeticEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getExprArithmetic_Simbolo()
  {
    return (EAttribute)exprArithmeticEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getExprArithmetic_Val1()
  {
    return (EReference)exprArithmeticEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getExprArithmetic_Val2()
  {
    return (EReference)exprArithmeticEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getExprParam()
  {
    return exprParamEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getExprParam_Name()
  {
    return (EAttribute)exprParamEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getLlamadaFuncion()
  {
    return llamadaFuncionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getLlamadaFuncion_Namefuncion()
  {
    return (EReference)llamadaFuncionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getLlamadaFuncion_Param()
  {
    return (EReference)llamadaFuncionEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getExprBool()
  {
    return exprBoolEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getExprBool_Var()
  {
    return (EAttribute)exprBoolEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getValBool()
  {
    return valBoolEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getCompBool()
  {
    return compBoolEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getCompBool_Val3()
  {
    return (EReference)compBoolEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getCompBool_Val4()
  {
    return (EReference)compBoolEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getOpBool()
  {
    return opBoolEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getOpBool_Op1()
  {
    return (EReference)opBoolEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getOpBool_Op2()
  {
    return (EReference)opBoolEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getExprIf()
  {
    return exprIfEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getExprIf_Condition()
  {
    return (EReference)exprIfEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getExprIf_Then()
  {
    return (EReference)exprIfEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getExprIf_Else()
  {
    return (EReference)exprIfEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getExprThen()
  {
    return exprThenEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getExprElse()
  {
    return exprElseEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getExprList()
  {
    return exprListEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getExprList_Lista()
  {
    return (EReference)exprListEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getExprList2()
  {
    return exprList2EClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getExprList2_Lista()
  {
    return (EReference)exprList2EClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getElementList()
  {
    return elementListEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getFuncList()
  {
    return funcListEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getExprCar()
  {
    return exprCarEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getExprCar_List()
  {
    return (EReference)exprCarEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getExprCdr()
  {
    return exprCdrEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getExprCdr_List()
  {
    return (EReference)exprCdrEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getExprCons()
  {
    return exprConsEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getExprCons_L1()
  {
    return (EReference)exprConsEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getExprCons_L2()
  {
    return (EReference)exprConsEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getExprIsEmpty()
  {
    return exprIsEmptyEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getExprIsEmpty_List()
  {
    return (EReference)exprIsEmptyEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getExprLength()
  {
    return exprLengthEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getExprLength_List()
  {
    return (EReference)exprLengthEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getExprPrint()
  {
    return exprPrintEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getExprPrint_Var()
  {
    return (EReference)exprPrintEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getEjecuciones()
  {
    return ejecucionesEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public LosMelosFactory getLosMelosFactory()
  {
    return (LosMelosFactory)getEFactoryInstance();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private boolean isCreated = false;

  /**
   * Creates the meta-model objects for the package.  This method is
   * guarded to have no affect on any invocation but its first.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void createPackageContents()
  {
    if (isCreated) return;
    isCreated = true;

    // Create classes and their features
    programEClass = createEClass(PROGRAM);
    createEAttribute(programEClass, PROGRAM__NAME);
    createEReference(programEClass, PROGRAM__SECCION_DEFINICIONES);
    createEReference(programEClass, PROGRAM__SECCION_EJECUCIONES);

    definicionesEClass = createEClass(DEFINICIONES);
    createEAttribute(definicionesEClass, DEFINICIONES__NAME);

    funcionesEClass = createEClass(FUNCIONES);
    createEAttribute(funcionesEClass, FUNCIONES__PARAM);
    createEReference(funcionesEClass, FUNCIONES__BODY);

    variablesEClass = createEClass(VARIABLES);
    createEReference(variablesEClass, VARIABLES__BODY);

    expresionEClass = createEClass(EXPRESION);

    llamadaParametroEClass = createEClass(LLAMADA_PARAMETRO);
    createEReference(llamadaParametroEClass, LLAMADA_PARAMETRO__PARAM);

    expresionVarEClass = createEClass(EXPRESION_VAR);

    basicaEClass = createEClass(BASICA);

    exprStringEClass = createEClass(EXPR_STRING);
    createEAttribute(exprStringEClass, EXPR_STRING__VAL);

    exprNumberEClass = createEClass(EXPR_NUMBER);

    exprIntEClass = createEClass(EXPR_INT);
    createEAttribute(exprIntEClass, EXPR_INT__VAR);

    exprArithmeticEClass = createEClass(EXPR_ARITHMETIC);
    createEAttribute(exprArithmeticEClass, EXPR_ARITHMETIC__SIMBOLO);
    createEReference(exprArithmeticEClass, EXPR_ARITHMETIC__VAL1);
    createEReference(exprArithmeticEClass, EXPR_ARITHMETIC__VAL2);

    exprParamEClass = createEClass(EXPR_PARAM);
    createEAttribute(exprParamEClass, EXPR_PARAM__NAME);

    llamadaFuncionEClass = createEClass(LLAMADA_FUNCION);
    createEReference(llamadaFuncionEClass, LLAMADA_FUNCION__NAMEFUNCION);
    createEReference(llamadaFuncionEClass, LLAMADA_FUNCION__PARAM);

    exprBoolEClass = createEClass(EXPR_BOOL);
    createEAttribute(exprBoolEClass, EXPR_BOOL__VAR);

    valBoolEClass = createEClass(VAL_BOOL);

    compBoolEClass = createEClass(COMP_BOOL);
    createEReference(compBoolEClass, COMP_BOOL__VAL3);
    createEReference(compBoolEClass, COMP_BOOL__VAL4);

    opBoolEClass = createEClass(OP_BOOL);
    createEReference(opBoolEClass, OP_BOOL__OP1);
    createEReference(opBoolEClass, OP_BOOL__OP2);

    exprIfEClass = createEClass(EXPR_IF);
    createEReference(exprIfEClass, EXPR_IF__CONDITION);
    createEReference(exprIfEClass, EXPR_IF__THEN);
    createEReference(exprIfEClass, EXPR_IF__ELSE);

    exprThenEClass = createEClass(EXPR_THEN);

    exprElseEClass = createEClass(EXPR_ELSE);

    exprListEClass = createEClass(EXPR_LIST);
    createEReference(exprListEClass, EXPR_LIST__LISTA);

    exprList2EClass = createEClass(EXPR_LIST2);
    createEReference(exprList2EClass, EXPR_LIST2__LISTA);

    elementListEClass = createEClass(ELEMENT_LIST);

    funcListEClass = createEClass(FUNC_LIST);

    exprCarEClass = createEClass(EXPR_CAR);
    createEReference(exprCarEClass, EXPR_CAR__LIST);

    exprCdrEClass = createEClass(EXPR_CDR);
    createEReference(exprCdrEClass, EXPR_CDR__LIST);

    exprConsEClass = createEClass(EXPR_CONS);
    createEReference(exprConsEClass, EXPR_CONS__L1);
    createEReference(exprConsEClass, EXPR_CONS__L2);

    exprIsEmptyEClass = createEClass(EXPR_IS_EMPTY);
    createEReference(exprIsEmptyEClass, EXPR_IS_EMPTY__LIST);

    exprLengthEClass = createEClass(EXPR_LENGTH);
    createEReference(exprLengthEClass, EXPR_LENGTH__LIST);

    exprPrintEClass = createEClass(EXPR_PRINT);
    createEReference(exprPrintEClass, EXPR_PRINT__VAR);

    ejecucionesEClass = createEClass(EJECUCIONES);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private boolean isInitialized = false;

  /**
   * Complete the initialization of the package and its meta-model.  This
   * method is guarded to have no affect on any invocation but its first.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void initializePackageContents()
  {
    if (isInitialized) return;
    isInitialized = true;

    // Initialize package
    setName(eNAME);
    setNsPrefix(eNS_PREFIX);
    setNsURI(eNS_URI);

    // Create type parameters

    // Set bounds for type parameters

    // Add supertypes to classes
    funcionesEClass.getESuperTypes().add(this.getDefiniciones());
    variablesEClass.getESuperTypes().add(this.getDefiniciones());
    expresionEClass.getESuperTypes().add(this.getExprThen());
    expresionEClass.getESuperTypes().add(this.getExprElse());
    basicaEClass.getESuperTypes().add(this.getExpresion());
    exprStringEClass.getESuperTypes().add(this.getExpresionVar());
    exprStringEClass.getESuperTypes().add(this.getBasica());
    exprStringEClass.getESuperTypes().add(this.getElementList());
    exprNumberEClass.getESuperTypes().add(this.getBasica());
    exprIntEClass.getESuperTypes().add(this.getExpresionVar());
    exprIntEClass.getESuperTypes().add(this.getExprNumber());
    exprIntEClass.getESuperTypes().add(this.getElementList());
    exprArithmeticEClass.getESuperTypes().add(this.getExprNumber());
    exprArithmeticEClass.getESuperTypes().add(this.getEjecuciones());
    exprParamEClass.getESuperTypes().add(this.getBasica());
    llamadaFuncionEClass.getESuperTypes().add(this.getExpresion());
    llamadaFuncionEClass.getESuperTypes().add(this.getEjecuciones());
    exprBoolEClass.getESuperTypes().add(this.getExpresion());
    exprBoolEClass.getESuperTypes().add(this.getExpresionVar());
    exprBoolEClass.getESuperTypes().add(this.getElementList());
    exprBoolEClass.getESuperTypes().add(this.getEjecuciones());
    valBoolEClass.getESuperTypes().add(this.getExprBool());
    compBoolEClass.getESuperTypes().add(this.getExprBool());
    opBoolEClass.getESuperTypes().add(this.getExprBool());
    exprIfEClass.getESuperTypes().add(this.getExpresion());
    exprIfEClass.getESuperTypes().add(this.getEjecuciones());
    exprListEClass.getESuperTypes().add(this.getExpresionVar());
    exprListEClass.getESuperTypes().add(this.getEjecuciones());
    exprList2EClass.getESuperTypes().add(this.getExpresion());
    funcListEClass.getESuperTypes().add(this.getExpresion());
    funcListEClass.getESuperTypes().add(this.getEjecuciones());
    exprCarEClass.getESuperTypes().add(this.getFuncList());
    exprCdrEClass.getESuperTypes().add(this.getFuncList());
    exprConsEClass.getESuperTypes().add(this.getFuncList());
    exprIsEmptyEClass.getESuperTypes().add(this.getFuncList());
    exprLengthEClass.getESuperTypes().add(this.getFuncList());
    exprPrintEClass.getESuperTypes().add(this.getBasica());

    // Initialize classes and features; add operations and parameters
    initEClass(programEClass, Program.class, "Program", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getProgram_Name(), ecorePackage.getEString(), "name", null, 0, 1, Program.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getProgram_SeccionDefiniciones(), this.getDefiniciones(), null, "seccionDefiniciones", null, 0, -1, Program.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getProgram_SeccionEjecuciones(), this.getEjecuciones(), null, "seccionEjecuciones", null, 0, -1, Program.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(definicionesEClass, Definiciones.class, "Definiciones", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getDefiniciones_Name(), ecorePackage.getEString(), "name", null, 0, 1, Definiciones.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(funcionesEClass, Funciones.class, "Funciones", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getFunciones_Param(), ecorePackage.getEString(), "param", null, 0, -1, Funciones.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, !IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getFunciones_Body(), this.getExpresion(), null, "body", null, 0, 1, Funciones.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(variablesEClass, Variables.class, "Variables", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getVariables_Body(), this.getExpresionVar(), null, "body", null, 0, 1, Variables.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(expresionEClass, Expresion.class, "Expresion", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(llamadaParametroEClass, LlamadaParametro.class, "LlamadaParametro", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getLlamadaParametro_Param(), this.getExprParam(), null, "param", null, 0, 1, LlamadaParametro.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(expresionVarEClass, ExpresionVar.class, "ExpresionVar", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(basicaEClass, Basica.class, "Basica", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(exprStringEClass, ExprString.class, "ExprString", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getExprString_Val(), ecorePackage.getEString(), "val", null, 0, 1, ExprString.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(exprNumberEClass, ExprNumber.class, "ExprNumber", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(exprIntEClass, ExprInt.class, "ExprInt", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getExprInt_Var(), ecorePackage.getEInt(), "var", null, 0, 1, ExprInt.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(exprArithmeticEClass, ExprArithmetic.class, "ExprArithmetic", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getExprArithmetic_Simbolo(), ecorePackage.getEString(), "simbolo", null, 0, 1, ExprArithmetic.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getExprArithmetic_Val1(), this.getExpresion(), null, "val1", null, 0, 1, ExprArithmetic.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getExprArithmetic_Val2(), this.getExpresion(), null, "val2", null, 0, 1, ExprArithmetic.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(exprParamEClass, ExprParam.class, "ExprParam", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getExprParam_Name(), ecorePackage.getEString(), "name", null, 0, 1, ExprParam.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(llamadaFuncionEClass, LlamadaFuncion.class, "LlamadaFuncion", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getLlamadaFuncion_Namefuncion(), this.getFunciones(), null, "namefuncion", null, 0, 1, LlamadaFuncion.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getLlamadaFuncion_Param(), this.getExpresion(), null, "param", null, 0, -1, LlamadaFuncion.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(exprBoolEClass, ExprBool.class, "ExprBool", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getExprBool_Var(), ecorePackage.getEString(), "var", null, 0, 1, ExprBool.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(valBoolEClass, ValBool.class, "ValBool", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(compBoolEClass, CompBool.class, "CompBool", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getCompBool_Val3(), this.getExpresion(), null, "val3", null, 0, 1, CompBool.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getCompBool_Val4(), this.getExpresion(), null, "val4", null, 0, 1, CompBool.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(opBoolEClass, OpBool.class, "OpBool", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getOpBool_Op1(), this.getExprBool(), null, "op1", null, 0, 1, OpBool.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getOpBool_Op2(), this.getExprBool(), null, "op2", null, 0, 1, OpBool.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(exprIfEClass, ExprIf.class, "ExprIf", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getExprIf_Condition(), ecorePackage.getEObject(), null, "condition", null, 0, 1, ExprIf.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getExprIf_Then(), this.getExprThen(), null, "then", null, 0, 1, ExprIf.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getExprIf_Else(), this.getExprElse(), null, "else", null, 0, 1, ExprIf.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(exprThenEClass, ExprThen.class, "ExprThen", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(exprElseEClass, ExprElse.class, "ExprElse", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(exprListEClass, ExprList.class, "ExprList", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getExprList_Lista(), this.getExpresion(), null, "lista", null, 0, -1, ExprList.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(exprList2EClass, ExprList2.class, "ExprList2", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getExprList2_Lista(), this.getExpresion(), null, "lista", null, 0, -1, ExprList2.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(elementListEClass, ElementList.class, "ElementList", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(funcListEClass, FuncList.class, "FuncList", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(exprCarEClass, ExprCar.class, "ExprCar", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getExprCar_List(), ecorePackage.getEObject(), null, "list", null, 0, 1, ExprCar.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(exprCdrEClass, ExprCdr.class, "ExprCdr", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getExprCdr_List(), ecorePackage.getEObject(), null, "list", null, 0, 1, ExprCdr.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(exprConsEClass, ExprCons.class, "ExprCons", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getExprCons_L1(), this.getExpresion(), null, "l1", null, 0, 1, ExprCons.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getExprCons_L2(), this.getExpresion(), null, "l2", null, 0, 1, ExprCons.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(exprIsEmptyEClass, ExprIsEmpty.class, "ExprIsEmpty", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getExprIsEmpty_List(), this.getExpresion(), null, "list", null, 0, 1, ExprIsEmpty.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(exprLengthEClass, ExprLength.class, "ExprLength", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getExprLength_List(), this.getExpresion(), null, "list", null, 0, 1, ExprLength.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(exprPrintEClass, ExprPrint.class, "ExprPrint", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getExprPrint_Var(), this.getExpresion(), null, "var", null, 0, 1, ExprPrint.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(ejecucionesEClass, Ejecuciones.class, "Ejecuciones", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    // Create resource
    createResource(eNS_URI);
  }

} //LosMelosPackageImpl
