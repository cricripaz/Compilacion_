/*
 * generated by Xtext 2.25.0
 */
package edu.upb.lp.isc.validation;

import org.eclipse.xtext.validation.Check;

import edu.upb.lp.isc.losMelos.Definiciones;
import edu.upb.lp.isc.losMelos.ExprCar;
import edu.upb.lp.isc.losMelos.ExprCdr;
import edu.upb.lp.isc.losMelos.ExprList;
import edu.upb.lp.isc.losMelos.LlamadaFuncion;
import edu.upb.lp.isc.losMelos.LosMelosPackage;

/**
 * This class contains custom validation rules. 
 *
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#validation
 */
public class LosMelosValidator extends AbstractLosMelosValidator {

//    public static final String INVALID_NAME = "invalidName";
//
//    @Check
//    public void checkGreetingStartsWithCapital(Greeting greeting) {
//        if (!Character.isUpperCase(greeting.getName().charAt(0))) {
//            warning("Name should start with a capital",
//                    LosMelosPackage.Literals.GREETINGNAME,
//                    INVALID_NAME);
//        }
//    }

    @Check 
    public void checkFuncionesInicienConLetras(Definiciones d) {
//        if (Character.isDigit(d.getName().charAt(0))) {
//            error("El nombre de su función o variable no puede inicar con un número",LosMelosPackage.Literals.DEFINICIONESNAME);
//        }
//        if (Character.isUpperCase(d.getName().charAt(0))) {
//            error("No puede iniciar con mayuscula", LosMelosPackage.Literals.DEFINICIONESNAME);
//        }


    }

    @Check
    public void checkCarLengthLista(ExprList el) {
        if (el.getLista().isEmpty()) {
            error("No se puede realizar dicha funcion con una lista vacia", LosMelosPackage.Literals.EXPR_LIST__LISTA);
        }
    }
    
    @Check
    public void checkCantidadParam(LlamadaFuncion lf) {
        if(lf.getNamefuncion().getParam().size() != lf.getParam().size()) {
            error("La cantidad de parámetros no coincide",LosMelosPackage.Literals.LLAMADA_FUNCION__PARAM);
        }
    }}



}